<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Com.OPPO.Mo.Core</name>
    </assembly>
    <members>
        <member name="T:Com.OPPO.Mo.DataAnotation.DisplayProperty">
            <summary>
            定义 <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/> 的属性
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.DataAnotation.DisplayProperty.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.DataAnotation.DisplayProperty.ShortName">
            <summary>
            短名称
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.DataAnotation.DisplayProperty.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.DataAnotation.DisplayProperty.Description">
            <summary>
            说明
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.DataAnotation.DisplayProperty.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.DataAnotation.DisplayProperty.Prompt">
            <summary>
            提示
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.IResult">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.IResult.Code">
            <summary>
            结果状态码
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.IResult.Message">
            <summary>
            提示信息
            </summary>
            <example>操作成功</example>
        </member>
        <member name="P:Com.OPPO.Mo.IResult.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.IResult`1">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.IResult`1.Data">
            <summary>
            结果状态码
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.MoConsts.ProjectCode">
            <summary>
            系统编码
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.MoConsts.BaseResultCode">
            <summary>
            基础响应码
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.MoConsts.IsMultiTenancyEnabled">
            <summary>
            是否允许多租户
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.ISortInfo">
            <summary>
            排序信息
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.ISortInfo.SortFields">
            <summary>
            排序字段s，譬如：['SortNo desc', 'CreateTime desc']
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.PageInfo">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageInfo.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageInfo.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageInfo.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化 <see cref="T:Com.OPPO.Mo.Queriable.PageInfo" /> 类的新实例。
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.IPageInfo">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.IPageInfo.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.IPageInfo.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.PageQuery`1">
            <summary>
            分页查询
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQuery`1.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQuery`1.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.PageQueryParameter`1">
            <summary>
            分页查询参数
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryParameter`1.SortFields">
            <summary>
            排序字段s
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryParameter`1.PageInfo">
            <summary>
            <see cref="P:Com.OPPO.Mo.Queriable.PageQueryParameter`1.PageInfo"/>
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryParameter`1.FilterParameters">
            <summary>
            过滤条件s
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryParameter`1.#ctor">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.PageQueryParameter`1"/>
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.PageQueryParameter`2">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.PageQueryParameter`1"/>
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TResult">结果类型</typeparam>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryParameter`2.MappingFunction">
            <summary>
            <see cref="!:TEntity"/>=><see cref="!:TResult"/>映射关系
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryParameter`2.#ctor(System.Func{`0,`1})">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.PageQueryParameter`2"/>
            </summary>
            <param name="transformFunc"><see cref="!:TEntity"/>=><see cref="!:TResult"/>映射关系</param>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.PageQueryResult`1">
            <summary>
            分页查询结果
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryResult`1.Code">
            <summary>
            结果状态码
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryResult`1.Data">
            <summary>
            结果数据
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryResult`1.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryResult`1.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryResult`1.TotalCount">
            <summary>
            数据总条数
            </summary>
            <example>250</example>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryResult`1.Message">
            <summary>
            提示信息
            </summary>
            <example>操作成功</example>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.PageQueryResult`1.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult`1.#ctor">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.PageQueryResult`1"/>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Com.OPPO.Mo.Queriable.PageQueryResult`1.#ctor(Com.OPPO.Mo.ResultCode,System.Collections.Generic.IList{`0},System.Int32,System.Int32,System.Int32,System.String)" -->
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult`1.#ctor(System.Collections.Generic.IList{`0},System.Int32,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.PageQueryResult`1"/>
            </summary>
            <param name="records">记录s</param>
            <param name="totalCount">总数量</param>
            <param name="offset">偏移量</param>
            <param name="count">数量</param>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult`1.#ctor(Com.OPPO.Mo.ResultCode,System.Collections.Generic.IList{`0},System.Int32,Com.OPPO.Mo.Queriable.IPageInfo)">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.PageQueryResult`1"/>
            </summary>
            <param name="code"><see cref="T:Com.OPPO.Mo.ResultCode"/></param>
            <param name="records">记录s</param>
            <param name="totalCount">总数量</param>
            <param name="pageInfo"><see cref="T:Com.OPPO.Mo.Queriable.IPageInfo"/></param>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult`1.#ctor(System.Collections.Generic.IList{`0},System.Int32,Com.OPPO.Mo.Queriable.IPageInfo)">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.PageQueryResult`1"/>
            </summary>
            <param name="records">记录s</param>
            <param name="totalCount">总数量</param>
            <param name="pageInfo"><see cref="T:Com.OPPO.Mo.Queriable.IPageInfo"/></param>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult`1.#ctor(Com.OPPO.Mo.ResultCode,System.String)">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.PageQueryResult`1"/>
            </summary>
            <param name="code"><see cref="T:Com.OPPO.Mo.ResultCode"/></param>
            <param name="message">消息</param>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult.FromCode``1(Com.OPPO.Mo.ResultCode,System.String)">
            <summary>
            返回<see cref="T:Com.OPPO.Mo.ResultCode"/>
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult.FromCode``1(Com.OPPO.Mo.ResultCode,System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            返回<see cref="T:Com.OPPO.Mo.ResultCode"/>并相应的信息与数据
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult.FromError``1(System.String,Com.OPPO.Mo.ResultCode)">
            <summary>
            返回异常信息
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult.FromData``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32)">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult.FromData``1(System.Collections.Generic.IList{``0},System.Int32,Com.OPPO.Mo.Queriable.IPageInfo)">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult.Ok``1(System.Collections.Generic.IList{``0},System.Int32,Com.OPPO.Mo.Queriable.IPageInfo)">
            <summary>
            返回成功
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.PageQueryResult.Ok``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32)">
            <summary>
            返回成功
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.IPageQueryResult">
            <summary>
            分页查询结果
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.IPageQueryResult.TotalCount">
            <summary>
            总数
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.Query`1">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.Query`1._filter">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.Query`1.#ctor">
            <summary>
            创建一个新的 <see cref="T:Com.OPPO.Mo.Queriable.Query`1"/>
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.Query`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.Query`1"/>
            </summary>
            <param name="filter">查询条件</param>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.Query`1.SortFields">
            <summary>
            排序字段s，譬如：['SortNo desc', 'CreateTime desc']
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.Query`1.GetFilter">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.IQuery`1">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity">查询Model类型</typeparam>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.IQuery`1.GetFilter">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.QueryAttribute">
            <summary>
            查询Attribute，仅适用于属性
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryAttribute.#ctor(Com.OPPO.Mo.Queriable.QueryComparisonOperator,System.String[])">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.QueryAttribute"/>
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.QueryAttribute.ComparisonOperator">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.QueryComparisonOperator"/>
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.QueryAttribute.PropertyPath">
            <summary>
            对应属性路径
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryAttribute.#ctor(System.String[])">
            <summary>
            查询字段
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.QueryComparisonOperator">
            <summary>
            查询比较操作符
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.Like">
            <summary>
            模糊匹配
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.NotLike">
            <summary>
            不包含模糊匹配
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.StartWidth">
            <summary>
            以...开头
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.LessThan">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.LessThanOrEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.GreaterThan">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.GreaterThanOrEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.Between">
            <summary>
            在...之间，属性必须是一个集合（或逗号分隔的字符串），取第一和最后一个值。
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.GreaterEqualAndLess">
            <summary>
            大于等于起始，小于结束，属性必须是一个集合（或逗号分隔的字符串），取第一和最后一个值。
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.Include">
            <summary>
            包含，属性必须是一个集合（或逗号分隔的字符串）
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.NotInclude">
            <summary>
            不包含，属性必须是一个集合（或逗号分隔的字符串）
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.IsNull">
            <summary>
            为空或不为空，可以为 bool类型，或可空类型。
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.QueryComparisonOperator.HasFlag">
            <summary>
            是否包含指定枚举
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.QueryExtension">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.IQuery`1"/>扩展s
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryExtension.GetQueryExpression``1(Com.OPPO.Mo.Queriable.IQuery{``0})">
            <summary>
            获取查询表达式
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.QueryFilter`1">
            <summary>
            查询Filter
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.QueryFilter`1.Predicate">
            <summary>
            条件
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryFilter`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.QueryFilter`1"/>
            </summary>
            <param name="predicate">条件</param>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.QueryParameter`1">
            <summary>
            查询参数
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.QueryParameter`1.SortFields">
            <summary>
            排序字段s
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.QueryParameter`1.Filters">
            <summary>
            过滤器s
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryParameter`1.#ctor">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.QueryParameter`1"/>
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.QueryParameter`2">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.QueryParameter`1"/>
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TResult">结果类型</typeparam>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.QueryParameter`2.MappingFunction">
            <summary>
            <see cref="!:TEntity"/>=><see cref="!:TResult"/>映射关系
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryParameter`2.#ctor(System.Func{`0,`1})">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.QueryResult`1"/>
            </summary>
            <param name="transformFunc"><see cref="!:TEntity"/>=><see cref="!:TResult"/>映射关系</param>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.QueryResult`1">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.QueryResult`1.Code">
            <summary>
            结果状态码
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.QueryResult`1.Data">
            <summary>
            结果数据
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.QueryResult`1.Message">
            <summary>
            提示信息
            </summary>
            <example>操作成功</example>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.QueryResult`1.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryResult`1.#ctor">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.QueryResult`1"/>
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryResult`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.QueryResult`1"/>
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryResult`1.#ctor(Com.OPPO.Mo.ResultCode,System.String)">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.QueryResult`1"/>
            </summary>
            <param name="ResultCode"><see cref="T:Com.OPPO.Mo.ResultCode"/></param>
            <param name="message">提示信息</param>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryResult`1.#ctor(Com.OPPO.Mo.ResultCode,System.Collections.Generic.IList{`0},System.String)">
            <summary>
            <see cref="T:Com.OPPO.Mo.Queriable.QueryResult`1"/>
            </summary>
            <param name="code"><see cref="T:Com.OPPO.Mo.ResultCode"/></param>
            <param name="records"></param>
            <param name="message"></param>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryResult.FromCode``1(Com.OPPO.Mo.ResultCode,System.String)">
            <summary>
            返回<see cref="T:Com.OPPO.Mo.ResultCode"/>
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryResult.FromCode``1(Com.OPPO.Mo.ResultCode,System.Collections.Generic.IList{``0},System.String)">
            <summary>
            返回<see cref="T:Com.OPPO.Mo.ResultCode"/>并相应的信息与数据
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryResult.FromError``1(System.String,Com.OPPO.Mo.ResultCode)">
            <summary>
            返回异常信息
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryResult.FromData``1(System.Collections.Generic.IList{``0})">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryResult.FromData``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.QueryResult.Ok``1(System.Collections.Generic.IList{``0})">
            <summary>
            返回成功
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.SortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.SortField.SortType">
            <summary>
            <see cref="P:Com.OPPO.Mo.Queriable.SortField.SortType"/>
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Queriable.SortField.Selector">
            <summary>
            字段Selector表达式
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Queriable.SortField.#ctor(System.Linq.Expressions.LambdaExpression,Com.OPPO.Mo.Queriable.SortType)">
            <inheritdoc/>
        </member>
        <member name="T:Com.OPPO.Mo.Queriable.SortType">
            <summary>
            排序类型,其中（ 1-升序； 2-降序）
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.SortType.Asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Queriable.SortType.Desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result.#ctor">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result.#ctor(Com.OPPO.Mo.ResultCode,System.String)">
            <summary>
            返回结果
            </summary>
            <param name="code"><see cref="T:Com.OPPO.Mo.ResultCode"/></param>
            <param name="message">提示信息</param>
        </member>
        <member name="P:Com.OPPO.Mo.Result.Code">
            <summary>
            结果状态码
            </summary>
        </member>
        <member name="P:Com.OPPO.Mo.Result.Message">
            <summary>
            提示信息
            </summary>
            <example>操作成功</example>
        </member>
        <member name="P:Com.OPPO.Mo.Result.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result.FromCode(Com.OPPO.Mo.ResultCode,System.String)">
            <summary>
            返回<see cref="T:Com.OPPO.Mo.ResultCode"/>
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result.FromCode``1(Com.OPPO.Mo.ResultCode,System.String)">
            <summary>
            返回<see cref="T:Com.OPPO.Mo.ResultCode"/>
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result.FromCode``1(Com.OPPO.Mo.ResultCode,``0,System.String)">
            <summary>
            返回<see cref="T:Com.OPPO.Mo.ResultCode"/>并相应的信息与数据
            </summary>
            <typeparam name="TData">数据类型</typeparam>
            <param name="code"><see cref="T:Com.OPPO.Mo.ResultCode"/></param>
            <param name="message">信息</param>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="M:Com.OPPO.Mo.Result.FromError(System.String,Com.OPPO.Mo.ResultCode)">
            <summary>
            返回异常信息
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result.FromError``1(System.String,Com.OPPO.Mo.ResultCode)">
            <summary>
            返回异常信息
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result.FromData``1(``0)">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result.FromData``1(``0,System.String)">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result.Ok(System.String)">
            <summary>
            返回成功
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result.Ok``1(``0)">
            <summary>
            返回成功
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Result`1">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result`1.#ctor">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result`1.#ctor(`0)">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.Result`1.#ctor(Com.OPPO.Mo.ResultCode,System.String)">
            <summary>
            返回结果
            </summary>
            <param name="code"><see cref="T:Com.OPPO.Mo.ResultCode"/></param>
            <param name="message">信息</param>
        </member>
        <member name="M:Com.OPPO.Mo.Result`1.#ctor(Com.OPPO.Mo.ResultCode,System.String,`0)">
            <summary>
            返回结果
            </summary>
            <param name="code"><see cref="T:Com.OPPO.Mo.ResultCode"/></param>
            <param name="message">信息</param>
            <param name="data">数据</param>
        </member>
        <member name="P:Com.OPPO.Mo.Result`1.Data">
            <summary>
            结果数据
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.ResultCode">
             <summary>
            结果状态码
             </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.Ok">
             <summary>
             成功
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.Fail">
             <summary>
             失败
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.ServerError">
             <summary>
             服务器异常
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.Unauthencatied">
             <summary>
             未认证
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.Unauthorized">
             <summary>
             未授权
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.Forbidden">
            <summary>
            禁止访问
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.InvalidToken">
            <summary>
            Token 验证失败
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.InvalidSign">
            <summary>
            签名验证失败
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.InvalidParams">
            <summary>
            参数验证失败
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.NoData">
             <summary>
             没有数据
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.DuplicateData">
            <summary>
            数据重复
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.ResultCode.MissEssentialData">
            <summary>
            关键数据缺失
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.ResultExtension.IsOk(Com.OPPO.Mo.IResult)">
            <summary>
            是否为成功状态
            </summary>
        </member>
        <member name="M:Com.OPPO.Mo.ResultExtension.ToResultAsync``1(System.Threading.Tasks.Task{``0})">
            <summary>
            返回结果数据
            </summary>
        </member>
        <member name="T:Com.OPPO.Mo.Sql.SqlComparisonOperator">
            <summary>
            Stand query language查询比较符，其中：（0-等于；1-不等于；2-小于；3-小于等于；4-大于；5-大于等于）
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Sql.SqlComparisonOperator.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Sql.SqlComparisonOperator.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Sql.SqlComparisonOperator.LessThan">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Sql.SqlComparisonOperator.LessThanOrEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Sql.SqlComparisonOperator.GreaterThan">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:Com.OPPO.Mo.Sql.SqlComparisonOperator.GreaterThanOrEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.DateTimeMillisecondConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.DateTimeMillisecondConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.DateTimeMillisecondConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Newtonsoft.Json.DateTimeStringConverter">
            <summary>
            <see cref="T:System.DateTime"/>与字符串Converter
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.DateTimeStringConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.DateTimeStringConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.DateTimeStringConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Newtonsoft.Json.Linq.JObjectExtensions.ConvertToSortedDictionary(Newtonsoft.Json.Linq.JObject)" -->
        <member name="M:Newtonsoft.Json.ListAndSpacesSeparatedStringConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.ListAndSpacesSeparatedStringConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.ListAndSpacesSeparatedStringConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:System.Linq.ExpressionHelper.CreatePropertySelectorLambda``3(System.Linq.Expressions.Expression{System.Func{``1,``2}})">
            <summary>
            transform expression parameter type to <see cref="!:T"/>
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TTargetType">parameter type</typeparam>
            <typeparam name="TResult">return type</typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.ExpressionHelper.CreatePropertySelectorLambda``2(System.Linq.Expressions.Expression{``1})">
            <summary>
            transform expression parameter type to <see cref="!:T"/>
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TDelegate"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.QueryableExtension.ToPageQueryResultAsync``1(System.Linq.IQueryable{``0},Com.OPPO.Mo.Queriable.PageQueryParameter{``0})">
            <summary>
            to query result as an asynchronous operation.
            </summary>
            <typeparam name="TSource">The type of the t source.</typeparam>
            <param name="query">The query.</param>
            <param name="parameter">The parameter.</param>
            <returns>Task&lt;QueryResult&lt;TSource&gt;&gt;.</returns>
        </member>
        <member name="M:System.Linq.QueryableExtension.PageBy``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            分页
            </summary>
            <param name="queryable"><see cref="T:System.Linq.IQueryable`1"/></param>
            <param name="offset">从第几条记录开始，不能小于0</param>
            <param name="count">取多少条记录，不能小于1</param>
        </member>
        <member name="M:System.Linq.QueryableExtension.WhereIf``1(System.Linq.IQueryable{``0},System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            如果条件 <paramref name="condition"/> 为 true， 根据指定的过滤器 <paramref name="predicate"/> 筛选集合
            </summary>
            <param name="query">查询的数据集</param>
            <param name="condition">是否过滤</param>
            <param name="predicate">过滤器</param>
        </member>
        <member name="M:System.Linq.QueryableExtension.WhereIf``1(System.Linq.IQueryable{``0},System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
            <summary>
            如果条件 <paramref name="condition"/> 为 true， 根据指定的过滤器 <paramref name="predicate"/> 筛选集合
            </summary>
            <param name="query">查询的数据集</param>
            <param name="condition">是否过滤</param>
            <param name="predicate">过滤器</param>
        </member>
        <member name="M:System.Linq.QueryableExtension.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            拼接 and 条件语句
            </summary>
            <typeparam name="T"></typeparam>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.QueryableExtension.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            拼接 or 条件语句
            </summary>
            <typeparam name="T"></typeparam>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="T:System.Runtime.EnumExtension">
            <summary>
            枚举扩展方法
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.GetEnums(System.Type)">
            <summary>
            获取指定枚举类型的所有值
            </summary>
            <param name="enumType">枚举类型</param>
        </member>
        <member name="M:System.Runtime.EnumExtension.GetEnums``1">
            <summary>
            获取指定枚举类型的所有值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
        </member>
        <member name="M:System.Runtime.EnumExtension.HasFlag(System.Enum,System.UInt64)">
            <summary>
            判断位域是否为指定的值
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.HasFlagX(System.Enum,System.Enum)">
            <summary>
            判断位域是否为指定的值
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.GetEnumFlags``1(System.Enum,System.Boolean)">
            <summary>
            返回枚举包含的位域项
            </summary>
            <param name="value">要拆分的枚举。</param>
            <param name="distinct">是否去除重复的值，当枚举有包含其它枚举的时候。</param>
        </member>
        <member name="M:System.Runtime.EnumExtension.GetAggregateEnumValue``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            获取聚合后的枚举值
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.Description(System.Enum)">
            <summary>
            返回枚举定义的说明 没有则返回 null
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.Display(System.Enum,Com.OPPO.Mo.DataAnotation.DisplayProperty)">
            <summary>
            获取枚举指定的显示内容
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.DisplayName(System.Enum)">
            <summary>
            获取枚举说明
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.DisplayShortName(System.Enum)">
            <summary>
            获取枚举说明
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.DisplayGroupName(System.Enum)">
            <summary>
            获取枚举分组名称
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.DisplayPrompt(System.Enum)">
            <summary>
            获取枚举水印信息
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.DisplayDescription(System.Enum)">
            <summary>
            获取枚举备注
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.DisplayOrder(System.Enum)">
            <summary>
            获取枚举显示排序
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.Descriptions(System.Enum,System.String)">
            <summary>
            返回位域枚举定义的说明
            </summary>
            <param name="val">枚举值</param>
            <param name="split">连接分隔符</param>
        </member>
        <member name="M:System.Runtime.EnumExtension.To``1(System.Enum)">
            <summary>
            返回枚举的整型值
            </summary>
        </member>
        <member name="M:System.Runtime.EnumExtension.ToEnum``1(System.String,System.Boolean)">
            <summary>
            转换字符串为指定的枚举
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="value">要转换的字符串</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:System.Runtime.EnumExtension.TryToEnum``1(System.String,``0,System.Boolean)">
            <summary>
            转换字符串为指定的枚举，如果失败则使用默认值
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="value">要转换的字符串</param>
            <param name="defaultValue">默认值，如果转换失败使用</param>
            <param name="ignoreCase">是否忽略大小写</param>
        </member>
        <member name="M:System.Runtime.EnumExtension.TryToEnum``1(System.String,System.Nullable{``0},System.Boolean)">
            <summary>
            转换字符串为指定的枚举，如果失败则使用默认值
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="value">要转换的字符串</param>
            <param name="defaultValue">默认值，如果转换失败使用</param>
            <param name="ignoreCase">是否忽略大小写</param>
        </member>
        <member name="M:System.Runtime.EnumExtension.ToEnum``1(System.Object)">
            <summary>
            将具有整数值的指定对象转换为枚举成员。
            </summary>
            <exception cref="T:System.ArgumentNullException">value 为 null。</exception>
            <exception cref="T:System.ArgumentException">
            value 不是 System.SByte、System.Int16、System.Int32、System.Int64、System.Byte、System.UInt16、System.UInt32 和 System.UInt64 类型。
            </exception>
        </member>
        <member name="M:System.Runtime.EnumExtension.ToEnumDisPlayName``1(System.Object)">
            <summary>
            将具有整数值的指定对象转换为枚举成员。
            </summary>
            <exception cref="T:System.ArgumentNullException">value 为 null。</exception>
            <exception cref="T:System.ArgumentException">
            value 不是 System.SByte、System.Int16、System.Int32、System.Int64、System.Byte、System.UInt16、System.UInt32 和 System.UInt64 类型。
            </exception>
        </member>
        <member name="M:System.Runtime.EnumExtension.GetDescriptionToList``1">
            <summary>
            列举所有枚举值和描述
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:System.Runtime.EnumExtension.EnumToSelectList(System.Type,System.String,System.String)">
            <summary>
            根据枚举生成下拉列表的数据源
            </summary>
            <param name="enumType">枚举类型</param>
            <param name="firstText">第一行文本(一般用于查询。例如：全部/请选择)</param>
            <param name="firstValue">第一行值(一般用于查询。例如：全部/请选择的值)</param>
            <returns></returns>
        </member>
        <member name="T:System.Runtime.EnumDescriptionDto">
            <summary>
            枚举信息
            </summary>
        </member>
        <member name="P:System.Runtime.EnumDescriptionDto.Text">
            <summary>
            枚举的名称(即：Description)
            </summary>
        </member>
        <member name="P:System.Runtime.EnumDescriptionDto.Type">
            <summary>
            枚举的值
            </summary>
        </member>
        <member name="T:System.Runtime.EnumSelectListItem">
            <summary>
            枚举转下拉列表
            </summary>
        </member>
        <member name="P:System.Runtime.EnumSelectListItem.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:System.Runtime.EnumSelectListItem.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:System.Runtime.TypeExtension">
            <summary>
            Type 扩展方法
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.PrettyPrint(System.Type)">
            <summary>
            获取可视化良好的字串描述
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:System.Runtime.TypeExtension.GetAttribute``1(System.Reflection.ParameterInfo)">
            <summary>
            获取参数的Attribute
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.GetAttributes``1(System.Reflection.ParameterInfo)">
            <summary>
            获取参数的Attribute
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.GetAttribute``1(System.Reflection.MemberInfo)">
            <summary>
            获取成员信息的Attribute
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.GetAttributes``1(System.Reflection.MemberInfo)">
            <summary>
            获取成员信息的Attribute
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.GetTypeOfNullable(System.Type)">
            <summary>
            获取<see cref="T:System.Nullable`1"/>范型的构造类型
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.IsCollectionType(System.Type)">
            <summary>
            判断类型是否为 集合类型 <see cref="T:System.Collections.Generic.ICollection`1"/>
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.IsDictionaryType(System.Type)">
            <summary>
            判断类型是否为 字典类型 <see cref="T:System.Collections.Generic.IDictionary`2"/>
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.IsEnumerableType(System.Type)">
            <summary>
            判断类型是否为 可迭代类型 <see cref="T:System.Collections.IEnumerable"/>
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.IsListOrDictionaryType(System.Type)">
            <summary>
            判断类型是否为 列表类型 <see cref="T:System.Collections.IList"/> 或 字典类型 <see cref="T:System.Collections.Generic.IDictionary`2"/>
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.IsListType(System.Type)">
            <summary>
            判断类型是否为 列表类型 <see cref="T:System.Collections.IList"/>
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.IsNullableType(System.Type)">
            <summary>
            判断类型是否为 可空类型 <see cref="T:System.Nullable`1"/>
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.Display(System.Reflection.MemberInfo,Com.OPPO.Mo.DataAnotation.DisplayProperty)">
            <summary>
            获取枚举指定的显示内容
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.DisplayName(System.Reflection.MemberInfo)">
            <summary>
            获取枚举说明
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.DisplayShortName(System.Reflection.MemberInfo)">
            <summary>
            获取枚举说明
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.DisplayGroupName(System.Reflection.MemberInfo)">
            <summary>
            获取枚举分组名称
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.DisplayPrompt(System.Reflection.MemberInfo)">
            <summary>
            获取枚举水印信息
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.DisplayDescription(System.Reflection.MemberInfo)">
            <summary>
            获取枚举备注
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.DisplayOrder(System.Reflection.MemberInfo)">
            <summary>
            获取枚举显示排序
            </summary>
        </member>
        <member name="M:System.Runtime.TypeExtension.IsAssignableToGenericType(System.Type,System.Type)">
            <summary>
            Checks whether <paramref name="givenType"/> implements/inherits <paramref name="genericType"/>.
            </summary>
            <param name="givenType">Type to check</param>
            <param name="genericType">Generic type</param>
        </member>
        <member name="M:System.Runtime.TypeExtension.GetAttributesOfMemberAndDeclaringType(System.Reflection.MemberInfo)">
            <summary>
            Gets a list of attributes defined for a class member and it's declaring type including inherited attributes.
            </summary>
            <param name="memberInfo">MemberInfo</param>
        </member>
        <member name="M:System.Runtime.TypeExtension.GetAttributesOfMemberAndDeclaringType``1(System.Reflection.MemberInfo)">
            <summary>
            Gets a list of attributes defined for a class member and it's declaring type including inherited attributes.
            </summary>
            <typeparam name="TAttribute">Type of the attribute</typeparam>
            <param name="memberInfo">MemberInfo</param>
        </member>
        <member name="M:System.Runtime.TypeExtension.GetSingleAttributeOfMemberOrDeclaringTypeOrDefault``1(System.Reflection.MemberInfo,``0)">
            <summary>
            Tries to gets an of attribute defined for a class member and it's declaring type including inherited attributes.
            Returns default value if it's not declared at all.
            </summary>
            <typeparam name="TAttribute">Type of the attribute</typeparam>
            <param name="memberInfo">MemberInfo</param>
            <param name="defaultValue">Default value (null as default)</param>
        </member>
        <member name="M:System.Runtime.TypeExtension.GetSingleAttributeOrDefault``1(System.Reflection.MemberInfo,``0)">
            <summary>
            Tries to gets an of attribute defined for a class member and it's declaring type including inherited attributes.
            Returns default value if it's not declared at all.
            </summary>
            <typeparam name="TAttribute">Type of the attribute</typeparam>
            <param name="memberInfo">MemberInfo</param>
            <param name="defaultValue">Default value (null as default)</param>
        </member>
    </members>
</doc>
